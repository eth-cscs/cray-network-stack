FROM docker.io/nvidia/cuda:12.8.0-devel-ubuntu24.04

RUN apt-get update \
    && DEBIAN_FRONTEND=noninteractive \
       apt-get install -y \
        build-essential \
        ca-certificates \
        pkg-config \
        automake \
        autoconf \
        libtool \
        gdb \
        strace \
        wget \
        git \
        bzip2 \
        python3 \
        rdma-core \
        libconfig-dev \
        libuv1-dev \
        libfuse-dev \
        libfuse3-dev \
        libyaml-dev \
        libnl-3-dev \
        libnuma-dev \
        libsensors-dev \
        libcurl4-openssl-dev \
        libjson-c-dev \
        libibverbs-dev \
        --no-install-recommends \
    && rm -rf /var/lib/apt/lists/*

ARG GDRCOPY_VER=2.4.4
RUN git clone --depth 1 --branch v${GDRCOPY_VER} https://github.com/NVIDIA/gdrcopy.git \
    && cd gdrcopy \
    && export CUDA_PATH=${CUDA_HOME:-$(echo $(which nvcc) | grep -o '.*cuda')} \
    && make CC=gcc CUDA=$CUDA_PATH lib \
    && make lib_install \
    && cd ../ && rm -rf gdrcopy

ARG cassini_headers_ref=9a8a738a879f007849fbc69be8e3487a4abf0952
RUN git clone https://github.com/HewlettPackard/shs-cassini-headers.git \
    && cd shs-cassini-headers \
    && git checkout ${cassini_headers_ref} \
    && cp -r include/* /usr/include/ \
    && cp -r share/* /usr/share/ \
    && cd .. \
    && rm -r shs-cassini-headers

ARG cxi_driver_ref=caa8bf41a25817111f137bb7e8be1e45c4e6758f
RUN git clone https://github.com/HewlettPackard/shs-cxi-driver.git \
    && cd shs-cxi-driver \
    && git checkout ${cxi_ddriver_ref} \
    && cp -r include/* /usr/include/ \
    && cd .. \
    && rm -r shs-cxi-driver

ARG libcxi_ref=31a183b521d1da670574e2a1bf59a91cb579b105
RUN git clone https://github.com/HewlettPackard/shs-libcxi.git \
    && cd shs-libcxi \
    && git checkout ${libcxi_ref} \
    && ./autogen.sh \
    && ./configure --prefix=/usr --with-cuda=/usr/local/cuda \
    && make -j$(nproc) \
    && make install \
    && ldconfig \
    && cd .. \
    && rm -r shs-libcxi

# Install libfabric
ARG libfabric_version=2.0.0
ARG libfabric_ref=36b974dc27c67fd0268e0ab575fd01592f756992
# Libfabric 2.0.0 seems to have a bug preventing compilation of the CXI provider, using main branch for now
RUN git clone --branch main --single-branch https://github.com/ofiwg/libfabric.git \
    && cd libfabric \
    && git checkout ${libfabric_ref} \
    && ./autogen.sh \
    && ./configure --prefix=/usr --with-cuda=/usr/local/cuda --enable-cuda-dlopen --enable-gdrcopy-dlopen --enable-cxi --enable-lnx --enable-efa \
    && make -j$(nproc) \
    && make install \
    && ldconfig \
    && cd .. \
    && rm -rf libfabric

ARG OMPI_VER=5.0.6
RUN wget -q  https://download.open-mpi.org/release/open-mpi/v5.0/openmpi-${OMPI_VER}.tar.gz \
    && tar xf openmpi-${OMPI_VER}.tar.gz \
    && cd openmpi-${OMPI_VER} \
    && ./configure --with-ofi=/usr --with-gdrcopy=/usr/local --prefix=/usr --with-cxi --with-slingshot \
       --with-cuda=/usr/local/cuda --with-cuda-libdir=/usr/local/cuda/lib64/stubs \
    && make -j$(nproc) \
    && make install \
    && ldconfig \
    && cd .. \
    && rm -rf openmpi-${OMPI_VER}.tar.gz openmpi-${OMPI_VER}

RUN wget -q http://mvapich.cse.ohio-state.edu/download/mvapich/osu-micro-benchmarks-7.5.tar.gz \
    && tar xf osu-micro-benchmarks-7.5.tar.gz \
    && cd osu-micro-benchmarks-7.5 \
    && ldconfig /usr/local/cuda/targets/sbsa-linux/lib/stubs \
    && ./configure --prefix=/usr/local CC=$(which mpicc) CFLAGS="-O3 -lcuda -lnvidia-ml" \
                   --enable-cuda --with-cuda-include=/usr/local/cuda/include \
                   --with-cuda-libpath=/usr/local/cuda/lib64 \
                   CXXFLAGS="-lmpi -lcuda" \ 
    && make -j$(nproc) \
    && make install \
    && ldconfig \
    && cd .. \
    && rm -rf osu-micro-benchmarks-7.5 osu-micro-benchmarks-7.5.tar.gz

WORKDIR /usr/local/libexec/osu-micro-benchmarks/mpi
